TShop.Balcony.registerCajoledMods("uniqueSign","{  ___.loadModule({      'instantiate': function (___, IMPORTS___) {        return ___.prepareModule({            'instantiate': function (___, IMPORTS___) {              var dis___ = IMPORTS___;              var moduleResult___, x0___, x1___, x2___, x3___, x4___, x5___,              x6___, x7___, x8___, x9___, x10___, x11___, x12___, x13___,              x14___, x15___, x16___, x17___, x18___, x19___, x20___, x21___,              x22___, x23___, x24___, x25___, x26___;              moduleResult___ = ___.NO_RESULT;              try {                {                  x0___ = IMPORTS___.console_v___? IMPORTS___.console:                  ___.ri(IMPORTS___, 'console'), x1___ =                    IMPORTS___.NodeList_v___? IMPORTS___.NodeList:                  ___.ri(IMPORTS___, 'NodeList'), x0___.log_m___?                    x0___.log('1', x1___): x0___.m___('log', [ '1', x1___ ]);                  x2___ = IMPORTS___.console_v___? IMPORTS___.console:                  ___.ri(IMPORTS___, 'console'), x4___ = (x3___ =                    IMPORTS___.NodeList_v___? IMPORTS___.NodeList:                    ___.ri(IMPORTS___, 'NodeList'), x3___.all_v___? x3___.all:                    x3___.v___('all')), x2___.log_m___?                    x2___.log('NodeList.all', x4___): x2___.m___('log', [                      'NodeList.all', x4___ ]);                  IMPORTS___.w___('parent', (x5___ = IMPORTS___.NodeList_v___?                      IMPORTS___.NodeList: ___.ri(IMPORTS___, 'NodeList'),                      x5___.all_m___? x5___.all('.dom-father'):                      x5___.m___('all', [ '.dom-father' ])));                  x6___ = IMPORTS___.console_v___? IMPORTS___.console:                  ___.ri(IMPORTS___, 'console'), x7___ =                    IMPORTS___.parent_v___? IMPORTS___.parent:                  ___.ri(IMPORTS___, 'parent'), x6___.log_m___?                    x6___.log('parent', x7___): x6___.m___('log', [ 'parent',                      x7___ ]);                  x8___ = IMPORTS___.console_v___? IMPORTS___.console:                  ___.ri(IMPORTS___, 'console'), x10___ = (x9___ =                    IMPORTS___.parent_v___? IMPORTS___.parent:                    ___.ri(IMPORTS___, 'parent'), x9___.text_m___? x9___.text()                    : x9___.m___('text', [ ])), x8___.log_m___?                    x8___.log('parent.text()', x10___): x8___.m___('log', [                      'parent.text()', x10___ ]);                  x11___ = IMPORTS___.console_v___? IMPORTS___.console:                  ___.ri(IMPORTS___, 'console'), x13___ = (x12___ =                    IMPORTS___.parent_v___? IMPORTS___.parent:                    ___.ri(IMPORTS___, 'parent'), x12___.lengthx_v___?                    x12___.lengthx: x12___.v___('lengthx')), x11___.log_m___?                    x11___.log('parent.lengthx', x13___): x11___.m___('log', [                      'parent.lengthx', x13___ ]);                  IMPORTS___.w___('children', (x14___ = IMPORTS___.parent_v___?                      IMPORTS___.parent: ___.ri(IMPORTS___, 'parent'),                      x14___.all_m___? x14___.all('div'): x14___.m___('all', [                          'div' ])));                  x15___ = IMPORTS___.console_v___? IMPORTS___.console:                  ___.ri(IMPORTS___, 'console'), x16___ =                    IMPORTS___.children_v___? IMPORTS___.children:                  ___.ri(IMPORTS___, 'children'), x15___.log_m___?                    x15___.log('children', x16___): x15___.m___('log', [                      'children', x16___ ]);                  x17___ = IMPORTS___.console_v___? IMPORTS___.console:                  ___.ri(IMPORTS___, 'console'), x19___ = (x18___ =                    IMPORTS___.children_v___? IMPORTS___.children:                    ___.ri(IMPORTS___, 'children'), x18___.text_m___?                    x18___.text(): x18___.m___('text', [ ])), x17___.log_m___?                    x17___.log('children.text()', x19___): x17___.m___('log', [                      'children.text()', x19___ ]);                  x20___ = IMPORTS___.console_v___? IMPORTS___.console:                  ___.ri(IMPORTS___, 'console'), x22___ = (x21___ =                    IMPORTS___.children_v___? IMPORTS___.children:                    ___.ri(IMPORTS___, 'children'), x21___.lengthx_v___?                    x21___.lengthx: x21___.v___('lengthx')), x20___.log_m___?                    x20___.log('children.lengthx', x22___): x20___.m___('log',                    [ 'children.lengthx', x22___ ]);                  x23___ = IMPORTS___.parent_v___? IMPORTS___.parent:                  ___.ri(IMPORTS___, 'parent'), x24___ = ___.f(function (e) {                      var ancestor, x0___, x1___, x2___;                      ancestor = (x0___ = IMPORTS___.parent_v___?                        IMPORTS___.parent: ___.ri(IMPORTS___, 'parent'),                        x0___.parent_m___? x0___.parent(): x0___.m___('parent',                          [ ]));                      x1___ = IMPORTS___.console_v___? IMPORTS___.console:                      ___.ri(IMPORTS___, 'console'), x2___ =                        ancestor.lengthx_v___? ancestor.lengthx:                      ancestor.v___('lengthx'), x1___.log_m___?                        x1___.log('ancestor', ancestor, x2___):                      x1___.m___('log', [ 'ancestor', ancestor, x2___ ]);                    }), x23___.on_m___? x23___.on('click', x24___):                  x23___.m___('on', [ 'click', x24___ ]);                  moduleResult___ = (x25___ = IMPORTS___.parent_v___?                    IMPORTS___.parent: ___.ri(IMPORTS___, 'parent'), x26___ =                    ___.f(function (e) {                        var x0___;                        x0___ = IMPORTS___.console_v___? IMPORTS___.console:                        ___.ri(IMPORTS___, 'console'), x0___.log_m___?                          x0___.log('mouseover:', e): x0___.m___('log', [                            'mouseover:', e ]);                      }), x25___.on_m___? x25___.on('mouseover', x26___):                    x25___.m___('on', [ 'mouseover', x26___ ]));                }              } catch (ex___) {                ___.getNewModuleHandler().handleUncaughtException(ex___,                  IMPORTS___.onerror_v___? IMPORTS___.onerror:                  ___.ri(IMPORTS___, 'onerror'), 'module.js', '1');              }              return moduleResult___;            },            'cajolerName': 'com.google.caja',            'cajolerVersion': '\\x3cunknown\\x3e',            'cajoledDate': 1378916475941          }).instantiate___(___, IMPORTS___), ___.prepareModule({            'instantiate': function (___, IMPORTS___) {              var dis___ = IMPORTS___;              var moduleResult___;              moduleResult___ = ___.NO_RESULT;              {                IMPORTS___.htmlEmitter___.signalLoaded();              }              return moduleResult___;            },            'cajolerName': 'com.google.caja',            'cajolerVersion': '\\x3cunknown\\x3e',            'cajoledDate': 1378916475950          }).instantiate___(___, IMPORTS___);      },      'cajolerName': 'com.google.caja',      'cajolerVersion': '\\x3cunknown\\x3e',      'cajoledDate': 1378916475952    });}")